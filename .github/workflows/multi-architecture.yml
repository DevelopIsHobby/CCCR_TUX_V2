# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: BuildAndPushImages

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_REPO: mskim6518/argocd-k8s-v2
  VERSION : 0.0.1
  DB_HOST: 192.168.56.10  # 외부 MySQL IP 주소
  DB_USER: weather
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}  # 비밀번호를 secrets로 관리

jobs:
  ci_cd_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      # Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # Gradle 빌드 실행
      - name: Build with Gradle
        run: ./gradlew build

      # 도커 허브 로그인
      - name: Log in to Docker hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Buildx 설치 및 활성화
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 빌드 및 푸시
      - name: 서버 이미지 빌드 및 푸시
        id: build_and_push_server
        run: |
          # Build the Docker image for multiple platforms
          docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile \
            -t ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}:tuxtalk-${{ env.VERSION }}-${{ github.run_number }} \
            --push .

