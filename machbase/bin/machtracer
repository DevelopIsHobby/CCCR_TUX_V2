#!/usr/bin/env python
#*******************************************************************************
#   of this product 2013-2023,
#  Machbase Corporation(or Inc.) or its subsidiaries.
#  All Rights reserved.
#******************************************************************************/

#*******************************************************************************
#  Description:
#  This file is used for binary trace
#
#*****************************************************************************/

import os;
import sys;
import argparse;
import re;

gMapFile='';
gTrcFile='';
gTracerName="tracer";

def parseArgs():
    global gMapFile;
    global gTrcFile;

    parser = argparse.ArgumentParser(description='argument list!')
    parser.add_argument('--mapfile', dest='mapfile', type=str, help='map file')
    parser.add_argument('--trcfile', dest='trcfile', type=str, help='trc file')

    args = parser.parse_args();

    if args.mapfile == None:
        gMapFile = '';
    else:
        gMapFile = args.mapfile;

    if args.trcfile == None:
        gTrcFile = '';
    else:
        gTrcFile = args.trcfile;

def checkBannerProperty():
    sHomePath = os.getenv('MACHBASE_HOME')
    sConfPath = sHomePath + "/conf/machbase.conf"

    if os.path.exists(sConfPath) is True:
        sConfFile = open(sConfPath).read()
        sMatched = re.findall("BANNER_PREFIX\s*=\s*(\S+)", sConfFile)

        if len(sMatched) > 0:
            return True
        else:
            return False
    else:
        return False

def printBanner(aBinary, aIndex):
    sHomePath = os.getenv('MACHBASE_HOME')
    sConfPath = sHomePath + "/conf/machbase.conf"

    if os.path.exists(sConfPath) is True:
        sConfFile = open(sConfPath).read()
        sMatched = re.findall("BANNER_PREFIX\s*=\s*(\S+)", sConfFile)

        sBannerPrefix = "machbase"
        if len(sMatched) > 0 and sMatched[-1].upper() == "ARKEN":
            sBannerPrefix = "arken"

        sBannerPath = sHomePath + "/conf/banner/%s_%s_%d.txt"%(sBannerPrefix, aBinary, aIndex)
        if os.path.exists(sBannerPath) is True:
            sBannerFile = open(sBannerPath).read()
            print(sBannerFile,end='')
    else:
        return

def printHelp(msg):
    if checkBannerProperty() is False:
        print('-----------------------------------------------------------------')
        print('     Machbase Tracer v1.0')
        print('     Copyright 2015, MACHBASE Corp. or its subsidiaries')
        print('     All Rights Reserved')
        print('-----------------------------------------------------------------')
        print('     Usage>')
        print('        machtracer [-h] [--mapfile MAPFILE] [--trcfile TRCFILE]')
        print('')
        print('     Option>')
        print('        --mapfile=file.map')
        print('        --trcfile=file.trc')
    else:
        printBanner(gTracerName, 1);
        printBanner(gTracerName, 2);
    print(msg)
    exit(-1)

if __name__ == '__main__':
    parseArgs();

    if gTrcFile=='':
       printHelp("     [ERR] trc file not found");

    if gMapFile=='':
       printHelp("     [ERR] map file not found");

    sPrev = 0;
    sMaxGap = 0;

    #make procedure list
    callStack = {};
    for line in open(gMapFile, 'r').readlines():
        match = re.search(r'([0-9a-fA-F]{16}) \S (\S+)$', line);
        if match:
            sAddress = int(match.group(1), 16);
            if sAddress - sPrev > sMaxGap and sPrev != 0:
                sMaxGap = sAddress - sPrev;
            sPrev = sAddress;
            sProcedure = match.group(2);
            callStack[sAddress] = sProcedure;

    for line in open(gTrcFile, 'r').readlines():
        match = re.search(r'(\s*\d+): 0x([0-9a-fA-F]{16}) ([^:]*):??', line)
        if match:
            sMatch = '??';
            sAddress = int(match.group(2), 16);
            for i in range(sMaxGap):
                sMatch = callStack.get(sAddress - i, '??');
                if sMatch != '??':
                    break;
            print(match.group(1)+': 0x'+match.group(2)+' '+match.group(3)+':'+sMatch)
        else:
            sys.stdout.write(line);
